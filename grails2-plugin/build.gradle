buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:2.2.0.RC1"
    }
}

import org.gradle.api.internal.component.*
import org.gradle.api.internal.artifacts.publish.*

apply plugin: "grails"

grails {
    grailsVersion = "2.5.1"
    groovyVersion = "2.4.9"
}

configurations.all { Configuration c ->
    c.exclude(group:'org.grails',module:'grails-datastore-gorm-support')

    resolutionStrategy {
        eachDependency { DependencyResolveDetails details ->
            if(details.requested.group == 'org.grails' && !details.requested.name.startsWith('grails-datastore')) {
                details.useVersion(grailsVersion)
            }
        }
    }
    resolutionStrategy.dependencySubstitution {
        // Substitute project and module dependencies
        substitute project(':grails-datastore-gorm-support') with project(':grails-datastore-gorm-grails2-support')
    }
}

def projectName = project.name.substring(project.name.indexOf('/') + 1)
def component = new GrailsPluginComponent(
        project.file("grails-${projectInfo.projectArtifactId}-${project.version}.zip"),
        project.configurations.runtime.allDependencies,
        project.tasks.findByName('grails-package-plugin')
)
project.getComponents().add(component)

dependencies {
    compile "org.grails:grails-datastore-simple:$gormVersion"

    compile "org.grails:grails-datastore-core:$gormVersion"
    compile "org.grails:grails-datastore-gorm:$gormVersion"
    compile "org.grails:grails-datastore-simple:$gormVersion"
    compile "org.grails:grails-datastore-gorm-grails2-support:$gormVersion"
    compile project(':grails-datastore-gorm-hibernate4'), {
        exclude group:'org.grails',module:'grails-datastore-gorm-support'
        exclude group:'org.grails',module:'grails-datastore-gorm-plugin-support'
        exclude group:'org.grails',module:'grails-core'
        exclude group:'org.grails',module:'grails-bootstrap'
        exclude group:'org.grails',module:'grails-async'
    }

    runtime "org.hibernate:hibernate-ehcache:${hibernateVersion}.Final", {
        exclude group: 'org.hibernate', module: 'hibernate-core'
        exclude group: 'org.jboss.logging', module:'jboss-logging'
    }
    runtime "net.sf.ehcache:ehcache:2.9.0"

    runtime 'org.jboss.logging:jboss-logging:3.1.0.GA', {
        exclude group:'org.jboss.logmanager', module:'jboss-logmanager'
        exclude group:'log4j', module:'log4j'
        exclude group:'org.slf4j', module:'slf4j-api'
    }
    test "org.spockframework:spock-core:1.0-groovy-2.4"
    provided 'javax.servlet:javax.servlet-api:3.1.0'
}

project.tasks.withType(PublishToMavenLocal) { task ->
    task.dependsOn("assemble")
}
project.tasks.withType(PublishToMavenRepository) { task ->
    task.dependsOn("assemble")
}

//test.jvmOptions.jvmArgs "-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005", "-Xdebug"

class GrailsPluginComponent implements SoftwareComponentInternal {

    private final PublishArtifact artifact
    private final DependencySet runtimeDependencies;

    GrailsPluginComponent(File file, DependencySet runtimeDependencies, Object...tasks) {
        artifact = new DefaultPublishArtifact(name, "zip", "zip", null, new Date(), file, tasks)
        this.runtimeDependencies = runtimeDependencies
    }

    String getName() { "java" }
    Set<Usage> getUsages() {
        Collections.singleton new Usage() {
            String getName() { "runtime" }
            Set<PublishArtifact> getArtifacts() {
                return Collections.singleton(GrailsPluginComponent.this.artifact);
            }

            Set<ModuleDependency> getDependencies() {
                return GrailsPluginComponent.this.runtimeDependencies.withType(ModuleDependency.class);
            }

        }
    }
}
